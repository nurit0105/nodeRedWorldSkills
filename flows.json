[
    {
        "id": "f3d5f4aa350bc8c7",
        "type": "tab",
        "label": "Basics",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ccb1e78f.c9f478",
        "type": "tab",
        "label": "Browser Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c96319e69d220e50",
        "type": "tab",
        "label": "Challenge1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2121ca907b3ee80f",
        "type": "tab",
        "label": "Challenge2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e0e961b4aebdd3ff",
        "type": "tab",
        "label": "FunnyWeirdOwnChallenge",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac2979ef39ddce11",
        "type": "tab",
        "label": "ChallengeVonDavid1",
        "disabled": false,
        "info": " - Random numbers sollen generiert werden\r\n - Diese Random numbers sollen in einem Web-Interface dargestellt werden\r\n - mit einem Tasteninput soll diese generierung aufhören \r\n - mit einem weiteren Tasteninput soll diese generierung wieder starten",
        "env": []
    },
    {
        "id": "0478b31567810a5b",
        "type": "group",
        "z": "f3d5f4aa350bc8c7",
        "name": "Switch",
        "style": {
            "label": true
        },
        "nodes": [
            "c01beca4f027e654",
            "54e63d99f7dcfd7c",
            "030a0c2671d8e6e5",
            "9c36830d4acb3cd1",
            "b7b2722d10b83708",
            "d7ec7ea53cfbbc33",
            "bdf2efb3281c1244"
        ],
        "x": 34,
        "y": 179,
        "w": 552,
        "h": 162
    },
    {
        "id": "de357da84e3c3ca8",
        "type": "group",
        "z": "f3d5f4aa350bc8c7",
        "name": "msg.types",
        "style": {
            "label": true
        },
        "nodes": [
            "fe82e6a1df43ae37",
            "3b973df7b726dd89",
            "6b969288f344e12a"
        ],
        "x": 34,
        "y": 39,
        "w": 352,
        "h": 122
    },
    {
        "id": "0c1f6de453cf612a",
        "type": "group",
        "z": "f3d5f4aa350bc8c7",
        "name": "Change",
        "style": {
            "label": true
        },
        "nodes": [
            "0faf8ac79bc640e0",
            "9996a089df01fce5",
            "2e477aff369d685b",
            "ba80d8e1454c5d4d"
        ],
        "x": 34,
        "y": 379,
        "w": 632,
        "h": 122
    },
    {
        "id": "5c0f3a80edc94014",
        "type": "group",
        "z": "f3d5f4aa350bc8c7",
        "name": "Verzögerung",
        "style": {
            "label": true
        },
        "nodes": [
            "27054b8e035a3224",
            "103bb2099455e6e8",
            "af02d391e000cc0d"
        ],
        "x": 34,
        "y": 539,
        "w": 592,
        "h": 82
    },
    {
        "id": "a606e9c04d918040",
        "type": "group",
        "z": "f3d5f4aa350bc8c7",
        "name": "Test Gruppe",
        "style": {
            "stroke": "#000000",
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "ba4f1f963fee92c7",
            "f778a541827a378f",
            "3662d015bb447584",
            "ccd129e89b9d2899",
            "80116ae47db898de"
        ],
        "x": 34,
        "y": 679,
        "w": 692,
        "h": 122
    },
    {
        "id": "c59573e850c6beda",
        "type": "group",
        "z": "f3d5f4aa350bc8c7",
        "name": "MySQL Example",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8145e77bde5dc885",
            "dcbe52fbd76e9f5f",
            "4b3f6e61046e4855",
            "79c6b7e2bc7f8615",
            "c66308eb7e9ce199",
            "c56fdf4a051d0e6b",
            "355a79275d6a9b1a",
            "1e3b6127a1a36218",
            "f90c532ce825d2d5",
            "28096233281177f6",
            "af57c0ebf9ed4c95",
            "f7ce0803f92621a7"
        ],
        "x": 34,
        "y": 919,
        "w": 892,
        "h": 162
    },
    {
        "id": "ea87d98ca030dc8a",
        "type": "junction",
        "z": "ccb1e78f.c9f478",
        "x": 320,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "245185307dc9647b",
        "type": "junction",
        "z": "ccb1e78f.c9f478",
        "x": 320,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "eea5e70546d147d5",
        "type": "junction",
        "z": "ccb1e78f.c9f478",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "cacd1f94c82dd384"
            ]
        ]
    },
    {
        "id": "dce9a25b40f40d81",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "heart",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "03a85ce256ca9d57",
        "type": "MySQLdatabase",
        "name": "MySQL Server",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "iot_data",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "3230fb6a274c3faf",
        "type": "ui_group",
        "name": "Challenge 2",
        "tab": "d18f7b47865312c4",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "8e3f6f5ad5e2511b",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d18f7b47865312c4",
        "type": "ui_tab",
        "name": "Challenge 2",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "019c43b59eea1d3c",
        "type": "ui_tab",
        "name": "HealthStatus",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cb3dd29e8a5a9df0",
        "type": "ui_group",
        "name": "Table",
        "tab": "019c43b59eea1d3c",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "db291e3f8144b203",
        "type": "ui_tab",
        "name": "Challenges von David",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5dcbe87c1cfa0f35",
        "type": "ui_group",
        "name": "Random Numbers Control",
        "tab": "db291e3f8144b203",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1184fa1d91ac2538",
        "type": "ui_group",
        "name": "Default",
        "tab": "db291e3f8144b203",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "fe82e6a1df43ae37",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "de357da84e3c3ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "wertung",
                "v": "55",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "test",
        "payloadType": "str",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "3b973df7b726dd89",
                "6b969288f344e12a"
            ]
        ]
    },
    {
        "id": "3b973df7b726dd89",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "de357da84e3c3ca8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "6b969288f344e12a",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "de357da84e3c3ca8",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "wertung",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 120,
        "wires": []
    },
    {
        "id": "c01beca4f027e654",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "9c36830d4acb3cd1"
            ]
        ]
    },
    {
        "id": "54e63d99f7dcfd7c",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "9c36830d4acb3cd1"
            ]
        ]
    },
    {
        "id": "030a0c2671d8e6e5",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "9c36830d4acb3cd1"
            ]
        ]
    },
    {
        "id": "9c36830d4acb3cd1",
        "type": "switch",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "20",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "b7b2722d10b83708"
            ],
            [
                "d7ec7ea53cfbbc33"
            ],
            [
                "bdf2efb3281c1244"
            ]
        ]
    },
    {
        "id": "b7b2722d10b83708",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 220,
        "wires": []
    },
    {
        "id": "d7ec7ea53cfbbc33",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 260,
        "wires": []
    },
    {
        "id": "bdf2efb3281c1244",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "0478b31567810a5b",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 300,
        "wires": []
    },
    {
        "id": "0faf8ac79bc640e0",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "0c1f6de453cf612a",
        "name": "Auto",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Typ\":\"Audi\",\"Zustand\":\"neu\",\"Preis\":4000}",
        "payloadType": "json",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "9996a089df01fce5",
                "ba80d8e1454c5d4d"
            ]
        ]
    },
    {
        "id": "9996a089df01fce5",
        "type": "change",
        "z": "f3d5f4aa350bc8c7",
        "g": "0c1f6de453cf612a",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "testTest",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "testTest.Zustand",
                "pt": "msg",
                "to": "gebraucht",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "testTest.Preis",
                "pt": "msg"
            },
            {
                "t": "change",
                "p": "testTest.Typ",
                "pt": "msg",
                "from": "Audi",
                "fromt": "str",
                "to": "Mercedes",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "2e477aff369d685b"
            ]
        ]
    },
    {
        "id": "2e477aff369d685b",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "0c1f6de453cf612a",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "testTest",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 460,
        "wires": []
    },
    {
        "id": "ba80d8e1454c5d4d",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "0c1f6de453cf612a",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 420,
        "wires": []
    },
    {
        "id": "27054b8e035a3224",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "5c0f3a80edc94014",
        "name": "Verzögerung",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "zuSpät",
        "payloadType": "str",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "103bb2099455e6e8"
            ]
        ]
    },
    {
        "id": "103bb2099455e6e8",
        "type": "delay",
        "z": "f3d5f4aa350bc8c7",
        "g": "5c0f3a80edc94014",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 580,
        "wires": [
            [
                "af02d391e000cc0d"
            ]
        ]
    },
    {
        "id": "af02d391e000cc0d",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "5c0f3a80edc94014",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 580,
        "wires": []
    },
    {
        "id": "77a8bca2bf6b124b",
        "type": "comment",
        "z": "f3d5f4aa350bc8c7",
        "name": "Group",
        "info": "gruppieren von mehren Nodes zur besseren Struktur\n",
        "x": 790,
        "y": 780,
        "wires": []
    },
    {
        "id": "285e8e00dea583b3",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TestTopic",
        "payload": "Goodbye World",
        "payloadType": "str",
        "x": 170,
        "y": 840,
        "wires": [
            [
                "ca9f2c7bd1cd549f"
            ]
        ]
    },
    {
        "id": "ca9f2c7bd1cd549f",
        "type": "link out",
        "z": "f3d5f4aa350bc8c7",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "ccd129e89b9d2899"
        ],
        "x": 335,
        "y": 840,
        "wires": []
    },
    {
        "id": "ba4f1f963fee92c7",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "a606e9c04d918040",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TestTopic",
        "payload": "Hello World",
        "payloadType": "str",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "3662d015bb447584"
            ]
        ]
    },
    {
        "id": "f778a541827a378f",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "a606e9c04d918040",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "3662d015bb447584",
        "type": "link out",
        "z": "f3d5f4aa350bc8c7",
        "g": "a606e9c04d918040",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "ccd129e89b9d2899"
        ],
        "x": 325,
        "y": 760,
        "wires": []
    },
    {
        "id": "ccd129e89b9d2899",
        "type": "link in",
        "z": "f3d5f4aa350bc8c7",
        "g": "a606e9c04d918040",
        "name": "Debug",
        "links": [
            "3662d015bb447584",
            "ca9f2c7bd1cd549f"
        ],
        "x": 515,
        "y": 760,
        "wires": [
            [
                "f778a541827a378f"
            ]
        ]
    },
    {
        "id": "80116ae47db898de",
        "type": "comment",
        "z": "f3d5f4aa350bc8c7",
        "g": "a606e9c04d918040",
        "name": "Unsichtbare Verbindung",
        "info": "Link-out zu Link-in\nZur besseren Übersicht",
        "x": 420,
        "y": 720,
        "wires": []
    },
    {
        "id": "8145e77bde5dc885",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 960,
        "wires": [
            [
                "dcbe52fbd76e9f5f"
            ]
        ]
    },
    {
        "id": "dcbe52fbd76e9f5f",
        "type": "function",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "Create Table",
        "func": "msg.topic= \"CREATE TABLE iot_factory (id SERIAL PRIMARY KEY, device_id VARCHAR(50) NOT NULL, timestamp TIMESTAMP NOT NULL, temperature FLOAT, humidity FLOAT, pressure FLOAT, status VARCHAR(20));\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 960,
        "wires": [
            [
                "28096233281177f6"
            ]
        ]
    },
    {
        "id": "4b3f6e61046e4855",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 960,
        "wires": []
    },
    {
        "id": "79c6b7e2bc7f8615",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "c66308eb7e9ce199"
            ]
        ]
    },
    {
        "id": "c66308eb7e9ce199",
        "type": "function",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "Insert",
        "func": "msg.topic= \"INSERT INTO iot_factory (device_id, timestamp, temperature, humidity, pressure, status) VALUES ('ABC123', NOW(), RAND() * 100, RAND() * 100, RAND() * 2000, 'OK');\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "af57c0ebf9ed4c95"
            ]
        ]
    },
    {
        "id": "c56fdf4a051d0e6b",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1000,
        "wires": []
    },
    {
        "id": "355a79275d6a9b1a",
        "type": "inject",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "1e3b6127a1a36218"
            ]
        ]
    },
    {
        "id": "1e3b6127a1a36218",
        "type": "function",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "SelectAll",
        "func": "msg.topic= \"SELECT *From iot_factory;\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "f7ce0803f92621a7"
            ]
        ]
    },
    {
        "id": "f90c532ce825d2d5",
        "type": "debug",
        "z": "f3d5f4aa350bc8c7",
        "g": "c59573e850c6beda",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1040,
        "wires": []
    },
    {
        "id": "28096233281177f6",
        "type": "mysql",
        "z": "f3d5f4aa350bc8c7",
        "d": true,
        "g": "c59573e850c6beda",
        "mydb": "03a85ce256ca9d57",
        "name": "",
        "x": 600,
        "y": 960,
        "wires": [
            [
                "4b3f6e61046e4855"
            ]
        ]
    },
    {
        "id": "af57c0ebf9ed4c95",
        "type": "mysql",
        "z": "f3d5f4aa350bc8c7",
        "d": true,
        "g": "c59573e850c6beda",
        "mydb": "03a85ce256ca9d57",
        "name": "",
        "x": 600,
        "y": 1000,
        "wires": [
            [
                "c56fdf4a051d0e6b"
            ]
        ]
    },
    {
        "id": "f7ce0803f92621a7",
        "type": "mysql",
        "z": "f3d5f4aa350bc8c7",
        "d": true,
        "g": "c59573e850c6beda",
        "mydb": "03a85ce256ca9d57",
        "name": "",
        "x": 600,
        "y": 1040,
        "wires": [
            [
                "f90c532ce825d2d5"
            ]
        ]
    },
    {
        "id": "557177b1.708e7",
        "type": "fileinject",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "x": 128,
        "y": 140,
        "wires": [
            [
                "7eaa0722.e2333",
                "245185307dc9647b"
            ]
        ]
    },
    {
        "id": "94334fd8.0fb03",
        "type": "camera",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "7eaa0722.e2333",
                "ea87d98ca030dc8a"
            ]
        ]
    },
    {
        "id": "7eaa0722.e2333",
        "type": "image",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "outputs": 0,
        "x": 420,
        "y": 260,
        "wires": []
    },
    {
        "id": "553b725daea76510",
        "type": "debug",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "cacd1f94c82dd384",
        "type": "switch",
        "z": "ccb1e78f.c9f478",
        "name": "Detection",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "person",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "airplane",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 640,
        "y": 180,
        "wires": [
            [
                "5b4116994cb649ea"
            ],
            [
                "89abc42df7fe4965"
            ],
            [
                "e95462b6e29f889a"
            ]
        ]
    },
    {
        "id": "5b4116994cb649ea",
        "type": "function",
        "z": "ccb1e78f.c9f478",
        "name": "function 1",
        "func": "msg.payload = \"Wiu Wiu Eindringling in der Produktion\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 160,
        "wires": [
            [
                "f67ef5f84fc6a560"
            ]
        ]
    },
    {
        "id": "f67ef5f84fc6a560",
        "type": "play audio",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "voice": "3",
        "x": 1010,
        "y": 200,
        "wires": []
    },
    {
        "id": "901294f1e1337a9b",
        "type": "play audio",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "voice": "3",
        "x": 1010,
        "y": 240,
        "wires": []
    },
    {
        "id": "89abc42df7fe4965",
        "type": "function",
        "z": "ccb1e78f.c9f478",
        "name": "function 2",
        "func": "msg.payload = \"Miauu\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 200,
        "wires": [
            [
                "901294f1e1337a9b"
            ]
        ]
    },
    {
        "id": "e95462b6e29f889a",
        "type": "function",
        "z": "ccb1e78f.c9f478",
        "name": "function 3",
        "func": "msg.payload = \"Flugzeug\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 240,
        "wires": [
            [
                "e7a4c774ecbaa433"
            ]
        ]
    },
    {
        "id": "e7a4c774ecbaa433",
        "type": "play audio",
        "z": "ccb1e78f.c9f478",
        "name": "",
        "voice": "3",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "8891b3ccd5fbd303",
        "type": "comment",
        "z": "ccb1e78f.c9f478",
        "name": "here word be TensorFlow",
        "info": "",
        "x": 430,
        "y": 180,
        "wires": []
    },
    {
        "id": "4b6ac005.c6281",
        "type": "inject",
        "z": "c96319e69d220e50",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "903b4cae.13137"
            ]
        ]
    },
    {
        "id": "903b4cae.13137",
        "type": "function",
        "z": "c96319e69d220e50",
        "name": "Format Time",
        "func": "var date = new Date(msg.payload);\n\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar timeString = `${hours}:${minutes}:${seconds}`;\n\nmsg.payload = timeString;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "42504c4602e4c4d9"
            ]
        ]
    },
    {
        "id": "42504c4602e4c4d9",
        "type": "debug",
        "z": "c96319e69d220e50",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 200,
        "wires": []
    },
    {
        "id": "344f14dbf2c48d5b",
        "type": "inject",
        "z": "2121ca907b3ee80f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "400adccd891a3217"
            ]
        ]
    },
    {
        "id": "400adccd891a3217",
        "type": "function",
        "z": "2121ca907b3ee80f",
        "name": "Math be Mathing",
        "func": "var initialisedNumber = global.get(\"generatedNumber\");\nvar addPercentage = global.get(\"addPercentage\");\nvar removePercentage = global.get(\"removePercentage\");\nvar numberAddRemovePercent = Math.random();\nvar newNumber;\n\nif (numberAddRemovePercent > 0.5) {\n    newNumber = parseFloat((addPercentage * initialisedNumber).toFixed(1));\n    if(newNumber >= 5.5){\n        newNumber = parseFloat((removePercentage * initialisedNumber).toFixed(1));\n    }\n    \n} else {\n    newNumber = parseFloat((removePercentage * initialisedNumber).toFixed(1));\n    if(newNumber <= 2.2 ){\n        newNumber = parseFloat((addPercentage * initialisedNumber).toFixed(1));\n    }\n}\n\nglobal.set(\"addPercentage\", addPercentage);\nglobal.set(\"removePercentage\", removePercentage);\nglobal.set(\"generatedNumber\", newNumber);\n\n\nmsg.payload = newNumber;\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "var generatedNumber = parseFloat((Math.random() * (6 - 2) + 2).toFixed(1));\n\nglobal.set(\"generatedNumber\", generatedNumber);\nglobal.set(\"addPercentage\", 1.1);\nglobal.set(\"removePercentage\", 0.9); ",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 160,
        "wires": [
            [
                "8aff1399de838c28",
                "ed4030b985965e7d"
            ]
        ]
    },
    {
        "id": "8aff1399de838c28",
        "type": "function",
        "z": "2121ca907b3ee80f",
        "name": "Saving60Secondy",
        "func": "var currentTime = new Date().getTime();\nvar savedData = context.get(\"savedData\") || [];\n\nsavedData.push(\n    { \n        value: msg.payload,\n        timestamp: currentTime \n        }\n        );\n\nvar lastSixtySecondsData = savedData.filter(\n    output => currentTime - output.timestamp <= 60000\n    );\n\ncontext.set(\"savedData\", lastSixtySecondsData); //context = node-red specialty like global or flow\n\nvar min = Math.min(...lastSixtySecondsData.map(output => output.value));\nvar max = Math.max(...lastSixtySecondsData.map(output => output.value));\nvar mean = lastSixtySecondsData.reduce((sum, output) => sum + output.value, 0) / lastSixtySecondsData.length;\n\nmsg.payload = {\n    min: min,\n    max: max,\n    mean: mean\n};\n\nglobal.set(\"min\",min);\nglobal.set(\"max\",max);\nglobal.set(\"mean\",mean);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "f1356c24d826da0f"
            ]
        ]
    },
    {
        "id": "ed4030b985965e7d",
        "type": "ui_chart",
        "z": "2121ca907b3ee80f",
        "name": "",
        "group": "3230fb6a274c3faf",
        "order": 2,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "60",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 530,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f1356c24d826da0f",
        "type": "ui_template",
        "z": "2121ca907b3ee80f",
        "group": "3230fb6a274c3faf",
        "name": "",
        "order": 1,
        "width": 10,
        "height": 3,
        "format": "<p>Min: {{msg.payload.min}}</p>\n<p>Max: {{msg.payload.max}}</p>\n<p>Mean: {{msg.payload.mean}}</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 880,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d614f2284cc3f9c2",
        "type": "inject",
        "z": "e0e961b4aebdd3ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "7bb88c772ca1b039"
            ]
        ]
    },
    {
        "id": "4a9e1d97c75e76e2",
        "type": "mysql",
        "z": "e0e961b4aebdd3ff",
        "mydb": "dce9a25b40f40d81",
        "name": "",
        "x": 510,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7bb88c772ca1b039",
        "type": "function",
        "z": "e0e961b4aebdd3ff",
        "name": "CREATE",
        "func": "msg.topic = \"CREATE TABLE hearthealth (id INT(11) NULL, datum DATE NULL, body CHAR(50) NULL, blutdruckOben INT(5) NULL, blutdruckUnten INT(5) NOT NULL, puls INT(5) NOT NULL) COLLATE='utf8mb4_unicode_ci' ENGINE=InnoDB;\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "4a9e1d97c75e76e2"
            ]
        ]
    },
    {
        "id": "csv-node",
        "type": "csv",
        "z": "e0e961b4aebdd3ff",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "array",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "function-node"
            ]
        ]
    },
    {
        "id": "function-node",
        "type": "function",
        "z": "e0e961b4aebdd3ff",
        "name": "CSV to INSERT",
        "func": "// Extract values from the msg.payload object\nlet id = msg.payload.id;\nlet datum = msg.payload.datum;\nlet body = msg.payload.body;\nlet blutdruckOben = msg.payload.blutdruckOben;\nlet blutdruckUnten = msg.payload.blutdruckUnten;\nlet puls = msg.payload.puls;\n\n\nmsg.topic = `INSERT INTO hearthealth (id, datum, body, blutdruckOben, blutdruckUnten, puls) VALUES (${id}, ${datum}, ${body}, ${blutdruckOben}, ${blutdruckUnten}, ${puls});`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            [
                "f8b0d4f6fa0e4671"
            ]
        ]
    },
    {
        "id": "0cc83c644feea581",
        "type": "template",
        "z": "e0e961b4aebdd3ff",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "id,datum,body,blutdruckOben,blutdruckUnten,puls\n1,'2024-05-06','liegend',86,54,58\n2,'2024-05-06','aufgestanden',118,75,123\n3,'2024-04-27','liegend',93,60,59\n4,'2024-04-27','aufgestanden',108,69,106\n5,'2024-04-26','liegend',99,64,60\n6,'2024-04-26','aufgestanden',116,82,101\n7,'2024-04-24','liegend',94,64,64\n8,'2024-04-24','aufgestanden',112,74,124\n9,'2024-04-22','liegend',81,50,74\n10,'2024-04-22','aufgestanden',109,82,127\n11,'2024-04-18','liegend',99,67,59\n12,'2024-04-18','aufgestanden',114,74,91\n13,'2024-04-19','liegend',101,62,60\n14,'2024-04-19','aufgestanden',123,76,105\n15,'2024-04-14','liegend',100,62,65\n16,'2024-04-14','aufgestanden',118,76,112\n17,'2024-04-15','liegend',89,56,66\n18,'2024-04-15','aufgestanden',113,68,124\n19,'2024-04-13','liegend',93,60,59\n20,'2024-04-13','aufgestanden',113,74,112\n21,'2024-04-12','liegend',96,59,68\n22,'2024-04-12','aufgestanden',118,73,117",
        "output": "str",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "csv-node"
            ]
        ]
    },
    {
        "id": "e4c051b440e03c01",
        "type": "inject",
        "z": "e0e961b4aebdd3ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "0cc83c644feea581"
            ]
        ]
    },
    {
        "id": "f8b0d4f6fa0e4671",
        "type": "mysql",
        "z": "e0e961b4aebdd3ff",
        "mydb": "dce9a25b40f40d81",
        "name": "",
        "x": 830,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8039bccfd3092ff4",
        "type": "mysql",
        "z": "e0e961b4aebdd3ff",
        "mydb": "dce9a25b40f40d81",
        "name": "",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "148a61c0ab3d25af"
            ]
        ]
    },
    {
        "id": "dd8883ef4175b77d",
        "type": "function",
        "z": "e0e961b4aebdd3ff",
        "name": "SELECT",
        "func": "msg.topic = \"SELECT id, datum, body, blutdruckOben, blutdruckUnten, puls FROM hearthealth\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "8039bccfd3092ff4"
            ]
        ]
    },
    {
        "id": "04b382ded5c6ec2f",
        "type": "inject",
        "z": "e0e961b4aebdd3ff",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "dd8883ef4175b77d"
            ]
        ]
    },
    {
        "id": "629245320f156ab3",
        "type": "ui_template",
        "z": "e0e961b4aebdd3ff",
        "group": "cb3dd29e8a5a9df0",
        "name": "",
        "order": 2,
        "width": 14,
        "height": 12,
        "format": "<table border=\"1\" style=\"width:100%\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Datum</th>\n            <th>Body</th>\n            <th>BlutdruckOben</th>\n            <th>BlutdruckUnten</th>\n            <th>Puls</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat=\"item in msg.payload\" style=\"color: {{item.puls > 90 ? 'black' : 'white'}}; background-color: {{item.puls > 90 ? '#FFCCCB' : 'black'}}\">\n            <td>{{item.id}}</td>\n            <td>{{item.datum}}</td>\n            <td>{{item.body}}</td>\n            <td>{{item.blutdruckOben}}</td>\n            <td>{{item.blutdruckUnten}}</td>\n            <td ng-class=\"{'high-pulse': item.puls > 90}\">{{item.puls}}</td>\n        </tr>\n    </tbody>\n</table>\n\n<style>\n    td {\n    text-align: center;\n    }\n    .high-pulse {\n        color: red;\n    }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 820,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "148a61c0ab3d25af",
        "type": "function",
        "z": "e0e961b4aebdd3ff",
        "name": "FormatDate",
        "func": "for (let i=0; i < 22; i++) {\n    var date = msg.payload[i].datum\n    var convertDate = date.toISOString().split('T')[0]; \n    msg.payload[i].datum = convertDate;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "ea230f4a3817b47f"
            ]
        ]
    },
    {
        "id": "ea230f4a3817b47f",
        "type": "function",
        "z": "e0e961b4aebdd3ff",
        "name": "Sorting",
        "func": "var arr = msg.payload\n    var sortedId = arr.sort(function(a, b){return a.id - b.id}); \n    /*.id um nach der id zu sortieren, a - b für aufsteigende Sotierung bei Nummern.\n        Bei Stringst toSorted() verwenden */\n    msg.payload = sortedId;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 380,
        "wires": [
            [
                "3fcc979f072e9b2f",
                "629245320f156ab3"
            ]
        ]
    },
    {
        "id": "3fcc979f072e9b2f",
        "type": "debug",
        "z": "e0e961b4aebdd3ff",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 380,
        "wires": []
    },
    {
        "id": "3347ecb3d69170f0",
        "type": "ui_text",
        "z": "e0e961b4aebdd3ff",
        "group": "cb3dd29e8a5a9df0",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Info",
        "label": "Info:",
        "format": " \"Normalerweise steigt der Puls nach dem Aufstehen um 10 – 20 Schläge pro Minute an\"",
        "layout": "row-spread",
        "x": 910,
        "y": 500,
        "wires": []
    },
    {
        "id": "faf3ac9bb35c3e35",
        "type": "ui_chart",
        "z": "ac2979ef39ddce11",
        "name": "",
        "group": "5dcbe87c1cfa0f35",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1aff40",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 510,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "be1b5a83ad759be6",
        "type": "function",
        "z": "ac2979ef39ddce11",
        "name": "RandomNumbers",
        "func": "var random = parseFloat((Math.random() * 100).toFixed(2))\n\nmsg.payload = random;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 220,
        "wires": [
            [
                "faf3ac9bb35c3e35",
                "6a8c2e1796a28616"
            ]
        ]
    },
    {
        "id": "6e0c945a31e755d6",
        "type": "inject",
        "z": "ac2979ef39ddce11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "be1b5a83ad759be6"
            ]
        ]
    },
    {
        "id": "986778a28c020afc",
        "type": "ui_toast",
        "z": "ac2979ef39ddce11",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "6a8c2e1796a28616",
        "type": "ui_text",
        "z": "ac2979ef39ddce11",
        "group": "5dcbe87c1cfa0f35",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current Random Number",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "df0a3ca180b0b23f",
        "type": "keypress",
        "z": "ac2979ef39ddce11",
        "key": "",
        "x": 100,
        "y": 320,
        "wires": [
            [
                "be1b5a83ad759be6",
                "5ec38d63fca4cee0"
            ]
        ]
    },
    {
        "id": "5ec38d63fca4cee0",
        "type": "debug",
        "z": "ac2979ef39ddce11",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 320,
        "wires": []
    },
    {
        "id": "81093c9dbc487b42",
        "type": "ui_template",
        "z": "ac2979ef39ddce11",
        "group": "1184fa1d91ac2538",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function($scope) {\n    document.onkeydown = function (e) {\n        let msg = {\"payload\": e.key,  \"topic\": \"keydown\"};\n        $scope.send(msg);\n    };\n    \n    document.onkeyup = function (e) {\n        let msg = {\"payload\": e.key, \"topic\": \"keyup\"};\n        $scope.send(msg);\n    };\n})(scope);\n</script>\n\n\n/* \n\n<!DOCTYPE html>\n<html>\n<body>\n\n<script>\n  // Function to handle keydown events\n  function keyDownHandler(event) {\n    if (event.code === \"Space\" || event.which === 32) {\n      window.alert(\"Hello, World!\");\n    }\n  }\n\n  // Attach the keydown event listener to the document\n  document.addEventListener(\"keydown\", keyDownHandler);\n</script>\n\n</body>\n</html>\n\n\n*/",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 120,
        "y": 480,
        "wires": [
            []
        ]
    }
]